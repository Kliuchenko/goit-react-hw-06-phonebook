{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contactsSlice';\nimport { filterReducer } from './filterSlice';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst persistConfig = {\n  key: 'contacts',\n  storage\n};\nexport const persistedReducer = persistReducer(persistConfig, contactsReducer);\nexport const store = configureStore({\n  reducer: {\n    contacts: persistedReducer,\n    filter: filterReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/Kliuchenko/Desktop/GoIT/react/goit-react-hw-06-phonebook/src/redux/store.jsx"],"names":["configureStore","contactsReducer","filterReducer","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","persistedReducer","store","reducer","contacts","filter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAWA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,UADa;AAElBV,EAAAA;AAFkB,CAAtB;AAKA,OAAO,MAAMW,gBAAgB,GAAGT,cAAc,CAACO,aAAD,EAAgBX,eAAhB,CAAvC;AAEP,OAAO,MAAMc,KAAK,GAAGf,cAAc,CAAC;AAClCgB,EAAAA,OAAO,EAAE;AACTC,IAAAA,QAAQ,EAAEH,gBADD;AAETI,IAAAA,MAAM,EAAEhB;AAFC,GADyB;AAKlCiB,EAAAA,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAAChB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AANY,CAAD,CAA5B;AAaP,OAAO,MAAMY,SAAS,GAAGnB,YAAY,CAACW,KAAD,CAA9B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contactsSlice';\nimport { filterReducer } from './filterSlice';\nimport storage from 'redux-persist/lib/storage';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst persistConfig = {\n    key: 'contacts',\n    storage,\n   };\n\nexport const persistedReducer = persistReducer(persistConfig, contactsReducer);\n\nexport const store = configureStore({\n  reducer: {\n  contacts: persistedReducer,\n  filter: filterReducer,\n},\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}