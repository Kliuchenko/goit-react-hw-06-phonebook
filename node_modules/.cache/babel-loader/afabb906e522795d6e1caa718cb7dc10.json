{"ast":null,"code":"var _jsxFileName = \"/Users/Kliuchenko/Desktop/GoIT/react/goit-react-hw-06-phonebook/src/components/Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport { filterContact } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Filter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        onChange: event => dispatch(filterContact(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filter, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/Kliuchenko/Desktop/GoIT/react/goit-react-hw-06-phonebook/src/components/Filter.jsx"],"names":["filterContact","useDispatch","Filter","dispatch","event","target","value"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,sBACE;AAAA,2BACE;AAAA,uDAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAC,wHAHV;AAIE,QAAA,KAAK,EAAC,wIAJR;AAKE,QAAA,QAAQ,EAAGG,KAAD,IAASD,QAAQ,CAACH,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAL7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBM;;GAAMJ,M;UACMD,W;;;KADNC,M","sourcesContent":["import { filterContact } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <form>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={(event)=>dispatch(filterContact(event.target.value))}\n        ></input>\n      </label>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}