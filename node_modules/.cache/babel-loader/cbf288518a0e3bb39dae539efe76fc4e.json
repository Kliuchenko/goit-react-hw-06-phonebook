{"ast":null,"code":"var _jsxFileName = \"/Users/Kliuchenko/Desktop/GoIT/react/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Table } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { deleteContacts } from 'redux/contactsSlice';\nimport { getFilter } from 'redux/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsList = () => {\n  _s();\n\n  const contactList = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: contactList.map(contact => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch(deleteContacts(contact.id)),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactsList, \"leJ774P1LgijiRAipr5FNcn4rWA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ContactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["/Users/Kliuchenko/Desktop/GoIT/react/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.jsx"],"names":["PropTypes","Table","useSelector","useDispatch","getContacts","deleteContacts","getFilter","ContactsList","contactList","filter","dispatch","map","contact","name","number","id"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,WAAW,GAAGN,WAAW,CAACE,WAAD,CAA/B;AACA,QAAMK,MAAM,GAAGP,WAAW,CAACI,SAAD,CAA1B;AACA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B;AACA,sBACE,QAAC,KAAD;AAAA,2BACE;AAAA,gBACGK,WAAW,CAACG,GAAZ,CAAgBC,OAAO,IAAI;AAC1B,4BACE;AAAA,kCACE;AAAA,sBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,mCACE;AAAQ,cAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACL,cAAc,CAACO,OAAO,CAACG,EAAT,CAAf,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASH,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvBM;;GAAMR,Y;UACSL,W,EACLA,W,EACEC,W;;;KAHNI,Y","sourcesContent":["import PropTypes from 'prop-types';\nimport { Table } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { deleteContacts } from 'redux/contactsSlice';\nimport { getFilter } from 'redux/selectors';\n\nexport const ContactsList = () => {\n  const contactList = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Table>\n      <tbody>\n        {contactList.map(contact => {\n          return (\n            <tr key={contact.id}>\n              <td>{contact.name}</td>\n              <td>{contact.number}</td>\n              <td>\n                <button onClick={() => dispatch(deleteContacts(contact.id))}>\n                  Delete\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}