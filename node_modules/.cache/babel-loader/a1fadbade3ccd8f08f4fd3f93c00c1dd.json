{"ast":null,"code":"var _jsxFileName = \"/Users/Kliuchenko/Desktop/GoIT/react/goit-react-hw-06-phonebook/src/components/App.jsx\";\nimport { useState, useEffect } from 'react';\nimport { Section } from './Section/Section';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactsList } from './ContactList/ContactList';\nimport { Filter } from './Filter';\nimport { nanoid } from 'nanoid';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  // const [contacts, setContacts] = useState(() => {\n  //   const contactsStorage = localStorage.getItem('contacts');\n  //   const parsedContactsStorage = JSON.parse(contactsStorage);\n  //   return parsedContactsStorage || [];\n  // });\n  // const [filter, setFilter] = useState (\"\");\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts))\n  // }, [contacts])\n  // const updateContacts = ({ name, number }) => {\n  // const contactExists = contacts.find(contact => {\n  //   return contact.name === name || contact.number === number;\n  // });\n  //   contactExists\n  //     ? Report.info(\n  //         '',\n  //         `Contact with name ${name} and number ${number} already exists`,\n  //         'Okay'\n  //       )\n  //     : setContacts(prevState => \n  //          [\n  //           ...prevState,\n  //           {\n  //             name,\n  //             number,\n  //             id: nanoid(),\n  //           },\n  //         ],\n  //       );\n  // };\n  // const filterContacts = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n  // const deleteContacts = id => {\n  //   setContacts(prevState => \n  //     prevState.filter(contact => contact.id !== id),\n  //   );\n  // };\n  // const normalizedFilter = filter.toLowerCase();\n  // const filteredContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(normalizedFilter)\n  // );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Phonebook\",\n      children: /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Contacts\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContactsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nApp.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  id: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Kliuchenko/Desktop/GoIT/react/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["useState","useEffect","Section","ContactForm","ContactsList","Filter","nanoid","Report","PropTypes","App","propTypes","name","string","number","id"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,QAAuB,oCAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACE;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,6BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,UAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAWD,CA3DI;KAAMA,G;AA6DbA,GAAG,CAACC,SAAJ,GAAgB;AACdC,EAAAA,IAAI,EAAEH,SAAS,CAACI,MADF;AAEdC,EAAAA,MAAM,EAAEL,SAAS,CAACK,MAFJ;AAGdC,EAAAA,EAAE,EAAEN,SAAS,CAACI;AAHA,CAAhB","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Section } from './Section/Section';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactsList } from './ContactList/ContactList';\nimport { Filter } from './Filter';\nimport { nanoid } from 'nanoid';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport PropTypes from 'prop-types';\n\nexport const App = () => {\n  // const [contacts, setContacts] = useState(() => {\n  //   const contactsStorage = localStorage.getItem('contacts');\n  //   const parsedContactsStorage = JSON.parse(contactsStorage);\n  //   return parsedContactsStorage || [];\n  // });\n  // const [filter, setFilter] = useState (\"\");\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts))\n  // }, [contacts])\n\n  // const updateContacts = ({ name, number }) => {\n    // const contactExists = contacts.find(contact => {\n    //   return contact.name === name || contact.number === number;\n    // });\n\n  //   contactExists\n  //     ? Report.info(\n  //         '',\n  //         `Contact with name ${name} and number ${number} already exists`,\n  //         'Okay'\n  //       )\n  //     : setContacts(prevState => \n  //          [\n  //           ...prevState,\n  //           {\n  //             name,\n  //             number,\n  //             id: nanoid(),\n  //           },\n  //         ],\n  //       );\n  // };\n\n  // const filterContacts = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const deleteContacts = id => {\n  //   setContacts(prevState => \n  //     prevState.filter(contact => contact.id !== id),\n  //   );\n  // };\n\n    // const normalizedFilter = filter.toLowerCase();\n    // const filteredContacts = contacts.filter(contact =>\n    //   contact.name.toLowerCase().includes(normalizedFilter)\n    // );\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactsList />\n        </Section>\n      </>\n    );\n  }\n\nApp.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  id: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}